{"version":3,"sources":["components/Main.info/MainInfo.jsx","components/StatisticBtns/StatisticBtns.jsx","components/_pages/MainPage.jsx","components/_share/GoBackHeader/GoBackHeader.jsx","components/_share/LabelInput/LabelInput.jsx","components/_pages/TransactionPage.jsx","components/_pages/BalancePage.jsx","components/App/App.jsx","index.js"],"names":["MainInfo","title","currency","options","handleOpenPage","activePage","map","namePeriod","titlePeriod","sum","onClick","type","StatisticsBtns","MainPage","mainInfoCosts","mainInfoIncomes","mainInfoBalance","GoBackHeader","cbGoBack","LabelInput","name","value","placeholder","cbOnChange","onChange","TransactionPage","state","date","time","category","comment","handleChange","e","target","setState","handleSubmit","preventDefault","props","transType","addTransaction","handleClosePage","transaction","id","shortid","generate","this","onSubmit","Component","BalancePage","App","costs","incomes","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8dfaec2.chunk.js","sourcesContent":["const MainInfo = ({\r\n  title,\r\n  currency = \"USD\",\r\n  options,\r\n  handleOpenPage,\r\n  activePage,\r\n}) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      <p>{currency}</p>\r\n      <ul>\r\n        {options.map(({ namePeriod, titlePeriod, sum }) => (\r\n          <li key={namePeriod}>\r\n            <span>{titlePeriod}</span>\r\n            <span>{sum}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={() => handleOpenPage(activePage)} type=\"button\">\r\n        Add\r\n      </button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MainInfo;","const StatisticsBtns = () => {\r\n  return (\r\n    <>\r\n      <button type=\"button\">Все расходы</button>\r\n      <button type=\"button\">Все доходы</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatisticsBtns;","import MainInfo from \"../Main.info/MainInfo\";\r\nimport StatisticsBtns from \"../StatisticBtns/StatisticBtns\";\r\nimport {\r\n  mainInfoCosts,\r\n  mainInfoIncomes,\r\n  mainInfoBalance,\r\n} from \"../../assets/Data/MainInfoOptions.json\";\r\n\r\nconst MainPage = ({ handleOpenPage }) => {\r\n  return (\r\n    <section>\r\n      <h1>Журнал расходов</h1>\r\n      <MainInfo\r\n        title={\"Расходы\"}\r\n        options={mainInfoCosts}\r\n        activePage=\"costs\"\r\n        handleOpenPage={handleOpenPage}\r\n      />\r\n      <MainInfo\r\n        title={\"Доходы\"}\r\n        options={mainInfoIncomes}\r\n        activePage=\"incomes\"\r\n        handleOpenPage={handleOpenPage}\r\n      />\r\n      <MainInfo\r\n        title={\"Баланс\"}\r\n        options={mainInfoBalance}\r\n        activePage=\"balance\"\r\n        handleOpenPage={handleOpenPage}\r\n      />\r\n      <StatisticsBtns />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MainPage;","const GoBackHeader = ({ title, cbGoBack }) => {\r\n  return (\r\n    <header>\r\n      <button type=\"button\" onClick={cbGoBack}>\r\n        GoBack\r\n      </button>\r\n      <h1>{title}</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default GoBackHeader;","const LabelInput = ({\r\n  title,\r\n  type = \"text\",\r\n  name,\r\n  value,\r\n  placeholder = null,\r\n  cbOnChange,\r\n}) => {\r\n  return (\r\n    <label>\r\n      {title && <p>{title}</p>}\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        onChange={cbOnChange}\r\n        placeholder={placeholder}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default LabelInput;","import { Component } from \"react\";\r\nimport GoBackHeader from \"../_share/GoBackHeader/GoBackHeader\";\r\nimport LabelInput from \"../_share/LabelInput/LabelInput\";\r\nimport shortid from \"shortid\";\r\n\r\nclass TransactionPage extends Component {\r\n  state = {\r\n    date: \"\",\r\n    time: \"\",\r\n    category: \"Еда\",\r\n    sum: \"\",\r\n    currency: \"USD\",\r\n    comment: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { transType, addTransaction, handleClosePage } = this.props;\r\n    addTransaction({\r\n      transType,\r\n      transaction: { ...this.state, id: shortid.generate() },\r\n    });\r\n    handleClosePage();\r\n  };\r\n\r\n  render() {\r\n    const { date, time, currency, category, sum, comment } = this.state;\r\n    const { handleClosePage, transType } = this.props;\r\n    return (\r\n      <section>\r\n        <GoBackHeader\r\n          title={transType === \"costs\" ? \"Расход\" : \"Доходы\"}\r\n          cbGoBack={handleClosePage}\r\n        />\r\n        <form onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\">Ok</button>\r\n          <LabelInput\r\n            type=\"date\"\r\n            title=\"День\"\r\n            name=\"date\"\r\n            value={date}\r\n            cbOnChange={this.handleChange}\r\n          />\r\n          <LabelInput\r\n            type=\"time\"\r\n            title=\"Время\"\r\n            name=\"time\"\r\n            value={time}\r\n            cbOnChange={this.handleChange}\r\n          />\r\n          <LabelInput\r\n            type=\"button\"\r\n            title=\"Категория\"\r\n            name=\"category\"\r\n            value={category}\r\n            // cbOnChange={() => {}}\r\n          />\r\n          <LabelInput\r\n            title=\"Сумма\"\r\n            name=\"sum\"\r\n            value={sum}\r\n            placeholder=\"Введите сумму\"\r\n            cbOnChange={this.handleChange}\r\n          />\r\n          <LabelInput\r\n            type=\"button\"\r\n            title=\"Валюта\"\r\n            name=\"currency\"\r\n            value={currency}\r\n            // cbOnChange={() => {}}\r\n          />\r\n          <LabelInput\r\n            name=\"comment\"\r\n            value={comment}\r\n            placeholder=\"Комментарий\"\r\n            cbOnChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TransactionPage;","const BalancePage = () => {\r\n  return <h1>BalancePage</h1>;\r\n};\r\n\r\nexport default BalancePage;","import { Component } from \"react\";\r\nimport MainPage from \"../_pages/MainPage\";\r\nimport TransactionPage from \"../_pages/TransactionPage\";\r\nimport BalancePage from \"../_pages/BalancePage\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    activePage: \"\",\r\n    costs: [],\r\n    incomes: [],\r\n  };\r\n\r\n  handleOpenPage = (activePage) => {\r\n    this.setState({ activePage });\r\n  };\r\n\r\n  handleClosePage = () => this.setState({ activePage: \"\" });\r\n\r\n  addTransaction = ({ transType, transaction }) => {\r\n    this.setState((prevState) => ({\r\n      [transType]: [...prevState[transType], transaction],\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { activePage } = this.state;\r\n    switch (activePage) {\r\n      case \"costs\":\r\n        return (\r\n          <TransactionPage\r\n            transType={activePage}\r\n            handleClosePage={this.handleClosePage}\r\n            addTransaction={this.addTransaction}\r\n          />\r\n        );\r\n      case \"incomes\":\r\n        return (\r\n          <TransactionPage\r\n            transType={activePage}\r\n            handleClosePage={this.handleClosePage}\r\n            addTransaction={this.addTransaction}\r\n          />\r\n        );\r\n      case \"balance\":\r\n        return <BalancePage />;\r\n      default:\r\n        return <MainPage handleOpenPage={this.handleOpenPage} />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}